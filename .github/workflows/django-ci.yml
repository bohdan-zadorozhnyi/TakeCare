name: TakeCare CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12345
          POSTGRES_DB: takecare
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install Pillow coverage
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
    - name: Setup Database with Schema
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345
        POSTGRES_DB: takecare
      run: |
        # Create a migration-ready database
        psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS migrate_db;"
        psql -h localhost -U postgres -c "CREATE DATABASE migrate_db OWNER postgres;"
        
        # Apply all migrations to the migration database
        POSTGRES_DB=migrate_db python manage.py migrate --noinput
        
        # Create test database from the schema
        psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS test_takecare;"
        psql -h localhost -U postgres -c "CREATE DATABASE test_takecare WITH TEMPLATE migrate_db OWNER postgres;"
        
    - name: Run Tests
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: 12345
        POSTGRES_DB: takecare
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        coverage run --source='calendar_app' manage.py test calendar_app
        
    - name: Generate Coverage Report
      run: |
        coverage report
        coverage xml
        
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Collect Static Files
      run: |
        python manage.py collectstatic --noinput
        
    # You would add your own deployment steps here
    # For example:
    # - name: Deploy to Production
    #   run: |
    #     # Add deployment commands here